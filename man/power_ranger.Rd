% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_ranger.R
\name{power_ranger}
\alias{power_ranger}
\title{Cascade Forest's implementation in R}
\usage{
power_ranger(x = NULL, y, training_frame, validation_frame = NULL,
  num.trees = 200, pmtry = NULL, n_forest = 4, random_forest = 2,
  eta = FALSE, num.threads = 30, work.dir = getwd(), early.stop = 10,
  continue = 0, write.forest = TRUE, save.memory = FALSE, id = NULL,
  k = NULL)
}
\arguments{
\item{x}{A vector containing the names or indices of the predictor variables to use in building the model. If x is missing,then all columns except y are used.}

\item{y}{The name of the response variable in the model.If the data does not contain a header, this is the column index number starting at 0, and increasing from left to right. (The response must be either an integer or a categorical variable).}

\item{training_frame}{Training data of class \code{data.frame} or \code{matrix}.}

\item{validation_frame}{Validation data.}

\item{num.trees}{Number of trees.}

\item{pmtry}{Percentage of variables to possibly split at in each node. Default is the (rounded down) square root of the number variables divided by total numbers.}

\item{n_forest}{Total forest number for every layer.}

\item{random_forest}{Number of Random forest.}

\item{num.threads}{Number of threads.}

\item{work.dir}{Type: character. When \code{out.of.memory == TRUE}, the four models of each layers will be saved to disk in file \code{df1:early.stop.RData}. If you don't provide a working directory, the models will be saved inside that directory.}

\item{early.stop}{Number of layers.}

\item{continue}{It's used for prediction if \code{n_forest==continue}. Else if \code{n_forest>continue} for add layers to Cascade Forest.}

\item{write.forest}{Save \code{ranger.forest} object, required for prediction. Set to \code{FALSE} to reduce memory usage if no prediction intended.}

\item{save.memory}{Use memory saving (but slower) splitting mode. Warning: This option slows down the tree growing, use only if you encounter memory problems.}

\item{id}{prefix of saved files}

\item{k}{number of k-folds, if is NULL (default) use OOB}
}
\description{
This function attempts to replicate Cascade Forest in original way of paper by package ranger.
}
\details{
For implementation details of Cascade Forest: \url{https://arxiv.org/pdf/1702.08835.pdf}.
}
\examples{
\dontrun{
rm(list=ls())
# Load libraries
library(devtools)
install_github( 'ablanda/deepForest ')
library(deepForest)
# Download MNIST data here: \\url{https://pjreddie.com/projects/mnist-in-csv/}
dati<-read.csv('mnist_train.csv',header=F)
dativ<-read.csv('mnist_test.csv',header=F)

dati[,1]<-as.factor(dati[,1])
dativ[,1]<-as.factor(dativ[,1])
m<-power_ranger(y=1,training_frame = dati[1:100,],validation_frame = dativ[1:100,],n_forest=8,random_forest = 4,early.stop=4,k=3)
pred<-matrix(0,nrow(dativ),nlevels(dati[,1])-1)
for(h in 1:(nlevels(dati[,1])-1)){
pred_level<-sapply(1:8,function(j) m$pred_val[[1]][[j]][,h])
 pred[,h] <-rowMeans(pred_level)}
}
}
\author{
Blanda Alessandro
}
